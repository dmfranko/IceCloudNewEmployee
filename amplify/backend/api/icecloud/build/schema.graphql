type Todo {
  id: ID!
  name: String!
  description: String
}

type Tasks {
  id: ID!
  user: String!
  name: String!
  description: String
  status: String
}

enum ModelSortDirection {
  ASC
  DESC
}

type ModelTodoConnection {
  items: [Todo]
  nextToken: String
}

input ModelStringFilterInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
}

input ModelIDFilterInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
}

input ModelIntFilterInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  contains: Int
  notContains: Int
  between: [Int]
}

input ModelFloatFilterInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  contains: Float
  notContains: Float
  between: [Float]
}

input ModelBooleanFilterInput {
  ne: Boolean
  eq: Boolean
}

input ModelTodoFilterInput {
  id: ModelIDFilterInput
  name: ModelStringFilterInput
  description: ModelStringFilterInput
  and: [ModelTodoFilterInput]
  or: [ModelTodoFilterInput]
  not: ModelTodoFilterInput
}

type Query {
  getTodo(id: ID!): Todo
  listTodos(filter: ModelTodoFilterInput, limit: Int, nextToken: String): ModelTodoConnection
  getTasks(id: ID!): Tasks
  listTaskss(filter: ModelTasksFilterInput, limit: Int, nextToken: String): ModelTasksConnection
}

input CreateTodoInput {
  id: ID
  name: String!
  description: String
}

input UpdateTodoInput {
  id: ID!
  name: String
  description: String
}

input DeleteTodoInput {
  id: ID
}

type Mutation {
  createTodo(input: CreateTodoInput!): Todo
  updateTodo(input: UpdateTodoInput!): Todo
  deleteTodo(input: DeleteTodoInput!): Todo
  createTasks(input: CreateTasksInput!): Tasks
  updateTasks(input: UpdateTasksInput!): Tasks
  deleteTasks(input: DeleteTasksInput!): Tasks
}

type Subscription {
  onCreateTodo: Todo @aws_subscribe(mutations: ["createTodo"])
  onUpdateTodo: Todo @aws_subscribe(mutations: ["updateTodo"])
  onDeleteTodo: Todo @aws_subscribe(mutations: ["deleteTodo"])
  onCreateTasks: Tasks @aws_subscribe(mutations: ["createTasks"])
  onUpdateTasks: Tasks @aws_subscribe(mutations: ["updateTasks"])
  onDeleteTasks: Tasks @aws_subscribe(mutations: ["deleteTasks"])
}

type ModelTasksConnection {
  items: [Tasks]
  nextToken: String
}

input ModelTasksFilterInput {
  id: ModelIDFilterInput
  user: ModelStringFilterInput
  name: ModelStringFilterInput
  description: ModelStringFilterInput
  status: ModelStringFilterInput
  and: [ModelTasksFilterInput]
  or: [ModelTasksFilterInput]
  not: ModelTasksFilterInput
}

input CreateTasksInput {
  id: ID
  user: String!
  name: String!
  description: String
  status: String
}

input UpdateTasksInput {
  id: ID!
  user: String
  name: String
  description: String
  status: String
}

input DeleteTasksInput {
  id: ID
}
